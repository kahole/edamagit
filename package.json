{
  "name": "magit",
  "preview": true,
  "displayName": "edamagit",
  "description": "Magit for Visual Studio Code",
  "publisher": "kahole",
  "author": {
    "name": "Kristian Andersen Hole"
  },
  "version": "0.6.32",
  "engines": {
    "vscode": "^1.50.0"
  },
  "icon": "images/edamagit_logo.png",
  "categories": [
    "Other"
  ],
  "keywords": [
    "magit",
    "git",
    "emacs",
    "commit"
  ],
  "license": "MIT",
  "homepage": "https://github.com/kahole/edamagit/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/kahole/edamagit.git"
  },
  "bugs": {
    "url": "https://github.com/kahole/edamagit/issues"
  },
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true,
      "description": "Uses git on the files in the workspace"
    }
  },
  "activationEvents": [
    "onCommand:magit.status",
    "onCommand:magit.dispatch",
    "onCommand:magit.commit",
    "onCommand:magit.branching",
    "onCommand:magit.merging",
    "onCommand:magit.rebasing",
    "onCommand:magit.resetting",
    "onCommand:magit.pushing",
    "onCommand:magit.pulling",
    "onCommand:magit.remoting",
    "onCommand:magit.logging",
    "onCommand:magit.show-refs",
    "onCommand:magit.diffing",
    "onCommand:magit.tagging",
    "onCommand:magit.cherry-picking",
    "onCommand:magit.reverting",
    "onCommand:magit.ignoring",
    "onCommand:magit.running",
    "onCommand:magit.worktree",
    "onCommand:magit.help",
    "onCommand:magit.stashing",
    "onCommand:magit.submodules",
    "onCommand:magit.fetching",
    "onCommand:magit.process-log",
    "onCommand:magit.file-popup",
    "onCommand:magit.blame-file",
    "onCommand:magit.diff-file",
    "onCommand:magit.log-file",
    "onCommand:magit.stage-file",
    "onCommand:magit.stage-all",
    "onCommand:magit.unstage-file",
    "onCommand:magit.unstage-all",
    "onCommand:magit.save-and-close-editor",
    "onCommand:magit.clear-and-abort-editor"
  ],
  "main": "./dist/extension",
  "contributes": {
    "commands": [
      {
        "command": "magit.status",
        "title": "Magit Status"
      },
      {
        "command": "magit.dispatch",
        "title": "Magit Dispatch"
      },
      {
        "command": "magit.file-popup",
        "title": "Magit File Popup"
      },
      {
        "command": "magit.visit-at-point",
        "title": "Magit Visit-at-point"
      },
      {
        "command": "magit.apply-at-point",
        "title": "Magit Apply-at-point"
      },
      {
        "command": "magit.discard-at-point",
        "title": "Magit Discard-at-point"
      },
      {
        "command": "magit.reverse-at-point",
        "title": "Magit Reverse-at-point"
      },
      {
        "command": "magit.commit",
        "title": "Magit Commit"
      },
      {
        "command": "magit.branching",
        "title": "Magit Branching"
      },
      {
        "command": "magit.merging",
        "title": "Magit Merging"
      },
      {
        "command": "magit.rebasing",
        "title": "Magit Rebasing"
      },
      {
        "command": "magit.resetting",
        "title": "Magit Resetting"
      },
      {
        "command": "magit.pushing",
        "title": "Magit Pushing"
      },
      {
        "command": "magit.pulling",
        "title": "Magit Pulling"
      },
      {
        "command": "magit.remoting",
        "title": "Magit Remoting"
      },
      {
        "command": "magit.logging",
        "title": "Magit Logging"
      },
      {
        "command": "magit.show-refs",
        "title": "Magit Show Refs"
      },
      {
        "command": "magit.diffing",
        "title": "Magit Diffing"
      },
      {
        "command": "magit.tagging",
        "title": "Magit Tagging"
      },
      {
        "command": "magit.cherry-picking",
        "title": "Magit Cherry Picking"
      },
      {
        "command": "magit.reverting",
        "title": "Magit Reverting"
      },
      {
        "command": "magit.ignoring",
        "title": "Magit Ignore"
      },
      {
        "command": "magit.running",
        "title": "Magit Running"
      },
      {
        "command": "magit.worktree",
        "title": "Magit Worktree"
      },
      {
        "command": "magit.stage",
        "title": "Magit Stage"
      },
      {
        "command": "magit.stage-all",
        "title": "Magit Stage All"
      },
      {
        "command": "magit.unstage",
        "title": "Magit Unstage"
      },
      {
        "command": "magit.unstage-all",
        "title": "Magit Unstage All"
      },
      {
        "command": "magit.help",
        "title": "Magit Help"
      },
      {
        "command": "magit.stashing",
        "title": "Magit Stashing"
      },
      {
        "command": "magit.submodules",
        "title": "Magit Submodules"
      },
      {
        "command": "magit.fetching",
        "title": "Magit Fetching"
      },
      {
        "command": "magit.process-log",
        "title": "Magit Process Log"
      },
      {
        "command": "magit.blame-file",
        "title": "Magit Blame File"
      },
      {
        "command": "magit.diff-file",
        "title": "Magit Diff File"
      },
      {
        "command": "magit.log-file",
        "title": "Magit Log File"
      },
      {
        "command": "magit.stage-file",
        "title": "Magit Stage File"
      },
      {
        "command": "magit.unstage-file",
        "title": "Magit Unstage File"
      },
      {
        "command": "magit.copy-section-value",
        "title": "Magit Copy Section Value"
      },
      {
        "command": "magit.copy-buffer-revision",
        "title": "Magit Copy Buffer Revision"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "magit.status"
        },
        {
          "command": "magit.dispatch"
        },
        {
          "command": "magit.help",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.branching",
          "when": "activeEditor"
        },
        {
          "command": "magit.merging",
          "when": "activeEditor"
        },
        {
          "command": "magit.rebasing",
          "when": "activeEditor"
        },
        {
          "command": "magit.resetting",
          "when": "activeEditor"
        },
        {
          "command": "magit.remoting",
          "when": "activeEditor"
        },
        {
          "command": "magit.logging",
          "when": "activeEditor"
        },
        {
          "command": "magit.show-refs",
          "when": "activeEditor"
        },
        {
          "command": "magit.diffing",
          "when": "activeEditor"
        },
        {
          "command": "magit.tagging",
          "when": "activeEditor"
        },
        {
          "command": "magit.cherry-picking",
          "when": "activeEditor"
        },
        {
          "command": "magit.reverting",
          "when": "activeEditor"
        },
        {
          "command": "magit.ignoring",
          "when": "activeEditor"
        },
        {
          "command": "magit.running",
          "when": "activeEditor"
        },
        {
          "command": "magit.worktree",
          "when": "activeEditor"
        },
        {
          "command": "magit.visit-at-point",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.apply-at-point",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.discard-at-point",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.reverse-at-point",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.stage",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.stage-all",
          "when": "activeEditor"
        },
        {
          "command": "magit.unstage",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.unstage-all",
          "when": "activeEditor"
        },
        {
          "command": "magit.commit",
          "when": "activeEditor"
        },
        {
          "command": "magit.pushing",
          "when": "activeEditor"
        },
        {
          "command": "magit.pulling",
          "when": "activeEditor"
        },
        {
          "command": "magit.stashing",
          "when": "activeEditor"
        },
        {
          "command": "magit.submodules",
          "when": "activeEditor"
        },
        {
          "command": "magit.fetching",
          "when": "activeEditor"
        },
        {
          "command": "magit.process-log",
          "when": "activeEditor"
        },
        {
          "command": "magit.file-popup",
          "when": "activeEditor && editorLangId != magit"
        },
        {
          "command": "magit.blame-file",
          "when": "activeEditor && editorLangId != magit"
        },
        {
          "command": "magit.diff-file",
          "when": "activeEditor && editorLangId != magit"
        },
        {
          "command": "magit.stage-file",
          "when": "activeEditor && editorLangId != magit"
        },
        {
          "command": "magit.unstage-file",
          "when": "activeEditor && editorLangId != magit"
        },
        {
          "command": "magit.copy-section-value",
          "when": "editorLangId == magit"
        },
        {
          "command": "magit.copy-buffer-revision",
          "when": "editorLangId == magit"
        }
      ]
    },
    "languages": [
      {
        "id": "magit",
        "aliases": [
          "Magit"
        ],
        "extensions": [
          ".magit"
        ],
        "configuration": "./languages/magit.language-configuration.json"
      }
    ],
    "configurationDefaults": {
      "[magit]": {
        "editor.lineNumbers": "off",
        "editor.minimap.enabled": false,
        "editor.renderWhitespace": "none"
      }
    },
    "configuration": {
      "title": "Edamagit",
      "properties": {
        "magit.display-buffer-function": {
          "type": "string",
          "enum": [
            "other-column",
            "same-column"
          ],
          "enumDescriptions": [
            "Open Edamagit views to the side of the current editor group.",
            "Open Edamagit views in the current editor group."
          ],
          "default": "other-column",
          "description": "Choose where new buffers will be displayed."
        },
        "magit.code-path": {
          "type": "string",
          "description": "Choose specific path to execude vscode. code or codium for example. Can also be a specific path like /Users/me/.nix-profile/bin/codium/"
        },
        "magit.forge-enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable Forge functionality (show pull requests, issues, etc from e.g. Github)"
        },
        "magit.hide-status-sections": {
          "type": "array",
          "default": [],
          "description": "Array of section names to be hidden in status view. The section names that may be hidden are: 'issues', 'pull requests', 'recent commits', 'staged', 'stashes', 'unmerged', 'unpulled', 'unpushed', 'unstaged', 'untracked'."
        },
        "magit.quick-switch-enabled": {
          "type": "boolean",
          "default": false,
          "description": "Enable automatic confirm for switch menu after enabling a switch (e.g. --force)"
        }
      }
    },
    "grammars": [
      {
        "language": "magit",
        "scopeName": "source.magit",
        "path": "./syntaxes/magit.tmGrammar.json"
      }
    ],
    "semanticTokenTypes": [
      {
        "id": "magit-ref-name",
        "superType": "label",
        "description": "Name of a git ref."
      },
      {
        "id": "magit-remote-ref-name",
        "superType": "label",
        "description": "Name of a git ref from a remote."
      },
      {
        "id": "magit-tag-name",
        "superType": "label",
        "description": "Name of a git tag."
      }
    ],
    "semanticTokenScopes": [
      {
        "scopes": {
          "magit-ref-name": [
            "entity.name.type.template"
          ],
          "magit-remote-ref-name": [
            "variable.other.constant"
          ],
          "magit-tag-name": [
            "string.highlight"
          ]
        }
      }
    ],
    "keybindings": [
      {
        "command": "magit.status",
        "key": "alt+x g"
      },
      {
        "command": "magit.dispatch",
        "key": "alt+x ctrl+g"
      },
      {
        "command": "magit.file-popup",
        "key": "alt+x alt+g",
        "when": "activeEditor"
      },
      {
        "command": "magit.toggle-fold",
        "key": "tab",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.refresh",
        "key": "g",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.help",
        "key": "shift+-",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.help",
        "key": "shift+/",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.visit-at-point",
        "key": "enter",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.apply-at-point",
        "key": "a",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.discard-at-point",
        "key": "k",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.reverse-at-point",
        "key": "v",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.commit",
        "key": "c",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.branching",
        "key": "b",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.merging",
        "key": "m",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.rebasing",
        "key": "r",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.resetting",
        "key": "shift+x",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.reset-mixed",
        "key": "x",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.reset-hard",
        "key": "ctrl+u x",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.remoting",
        "key": "shift+m",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.logging",
        "key": "l",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.show-refs",
        "key": "y",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress|Visual).*$/"
      },
      {
        "command": "magit.diffing",
        "key": "d",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.tagging",
        "key": "t",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.cherry-picking",
        "key": "shift+a",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.reverting",
        "key": "shift+v",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.ignoring",
        "key": "i",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.ignoring",
        "key": "shift+i",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.running",
        "key": "shift+1",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.worktree",
        "key": "shift+5",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.pushing",
        "key": "shift+p",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.pulling",
        "key": "shift+f",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.stashing",
        "key": "z",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.submodules",
        "key": "o",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.fetching",
        "key": "f",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.stage",
        "key": "s",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.stage-all",
        "key": "shift+s",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.unstage",
        "key": "u",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.unstage-all",
        "key": "shift+u",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.process-log",
        "key": "shift+4",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.quit",
        "key": "q",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.move-next-entity",
        "key": "ctrl+j",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.move-previous-entity",
        "key": "ctrl+k",
        "when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
      },
      {
        "command": "magit.save-and-close-editor",
        "key": "ctrl+c ctrl+c",
        "when": "editorTextFocus && editorLangId == git-commit"
      },
      {
        "command": "magit.clear-and-abort-editor",
        "key": "ctrl+c ctrl+k",
        "when": "editorTextFocus && editorLangId == git-commit"
      },
      {
        "command": "magit.save-and-close-editor",
        "key": "ctrl+c ctrl+c",
        "when": "editorTextFocus && editorLangId == git-rebase"
      },
      {
        "command": "magit.clear-and-abort-editor",
        "key": "ctrl+c ctrl+k",
        "when": "editorTextFocus && editorLangId == git-rebase"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "compile": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "test-compile": "tsc -p ./"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.0",
    "@types/node": "^14.14.14",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^4.10.0",
    "@typescript-eslint/parser": "^4.10.0",
    "eslint": "^7.16.0",
    "eslint-loader": "^4.0.2",
    "glob": "^7.1.6",
    "mocha": "^10.0.0",
    "ts-loader": "^8.0.12",
    "typescript": "^4.1.3",
    "vscode-test": "^1.4.1",
    "webpack": "^5.11.0",
    "webpack-cli": "^4.2.0"
  },
  "dependencies": {
    "date-fns": "^2.16.1",
    "jsonc-parser": "^3.0.0"
  }
}
